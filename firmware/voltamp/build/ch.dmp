
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00002514 memsz 0x00002518 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08002518 align 2**15
         filesz 0x00000000 memsz 0x000008d0 flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002424  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08002514  08002514  0000a514  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  4 .bss          000008d0  20000800  08002518  00010800  2**3
                  ALLOC
  5 .debug_abbrev 00006dc4  00000000  00000000  0000a514  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001bf86  00000000  00000000  000112d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00009d5e  00000000  00000000  0002d25e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000a90e  00000000  00000000  00036fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00001bed  00000000  00000000  000418ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 000044e6  00000000  00000000  000434b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001228  00000000  00000000  0004799d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001b20  00000000  00000000  00048bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003f83  00000000  00000000  0004a6e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000011  00000000  00000000  0004e668  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  0004e679  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000031e0  00000000  00000000  0004e6ac  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08002514 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
0800020c l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	00000048 mainthread.1986
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000850 l     F .text	0000003a wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000e60 l     F .text	0000002c qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000d4c l     O .bss	00000004 endmem
20000d50 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 serial.c
08001250 l     F .text	0000000c putwouldblock
08001260 l     F .text	0000000c getwouldblock
08001270 l     F .text	00000022 getflags
080012a0 l     F .text	0000000a readt
080012b0 l     F .text	0000000e reads
080012c0 l     F .text	0000000a writet
080012d0 l     F .text	0000000e writes
080012e0 l     F .text	0000000a gett
080012f0 l     F .text	0000000a putt
08002420 l     O .text	00000024 vmt
00000000 l    df *ABS*	00000000 tm.c
080013c0 l     F .text	0000000e tm_start
080013d0 l     F .text	00000030 tm_stop
20000d54 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 stm32_dma.c
20000d58 l     O .bss	00000038 dma_isr_redir
20000d90 l     O .bss	00000004 dma_streams_mask
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 serial_lld.c
08001b80 l     F .text	00000014 notify1
08001ba0 l     F .text	00000014 notify2
08001bc0 l     F .text	0000015e serve_interrupt
00000000 l    df *ABS*	00000000 pal_lld.c
080024b0 l     O .text	00000012 cfgtab.3307
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 dac.c
00000000 l    df *ABS*	00000000 led_ctrl.c
08001fb0 l     F .text	0000008c ledsThread
20000f08 l     O .bss	00000010 mutex
20000f18 l     O .bss	00000004 value
20000f1c l     O .bss	00000004 arg.3343
20000f20 l     O .bss	000001b0 waLeds
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chheap.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 test.c
00000000 l    df *ABS*	00000000 testthd.c
00000000 l    df *ABS*	00000000 testsem.c
00000000 l    df *ABS*	00000000 testmtx.c
00000000 l    df *ABS*	00000000 testmsg.c
00000000 l    df *ABS*	00000000 testmbox.c
00000000 l    df *ABS*	00000000 testevt.c
00000000 l    df *ABS*	00000000 testheap.c
00000000 l    df *ABS*	00000000 testpools.c
00000000 l    df *ABS*	00000000 testdyn.c
00000000 l    df *ABS*	00000000 testqueues.c
00000000 l    df *ABS*	00000000 testbmk.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 pwm_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 iwdg.c
00000000 l    df *ABS*	00000000 iwdg_lld.c
00000000 l    df *ABS*	00000000 cpu_io.c
00000000 l    df *ABS*	00000000 adc_ctrl.c
00000000 l    df *ABS*	00000000 relay_ctrl.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 ctype_.c
080024d0 g     O .text	0000003c pal_default_config
080001e0  w    F .text	00000002 Vector58
080001e0  w    F .text	00000002 VectorE8
080001e0  w    F .text	00000002 Vector9C
08000510 g     F .text	00000034 dbg_check_lock_from_isr
08000dc0 g     F .text	00000054 chEvtSignalFlagsI
080001e0  w    F .text	00000002 VectorAC
08000bc0 g     F .text	00000016 chThdExit
08000410 g     F .text	00000054 chSysTimerHandlerI
08000e20 g     F .text	00000034 chEvtBroadcastFlagsI
080008e0 g     F .text	0000004c chSchGoSleepTimeoutS
08001220 g     F .text	00000008 i2cInit
08000c00 g     F .text	00000108 chMtxLockS
080004a0 g     F .text	00000030 dbg_check_lock
080001e0  w    F .text	00000002 Vector5C
080001e0  w    F .text	00000002 NMIVector
08002040 g     F .text	00000068 initLed
08001610 g     F .text	00000040 dmaInit
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000890 g     F .text	0000004c chSchGoSleepS
20000dc8 g     O .bss	00000058 I2CD1
200010d0 g       *ABS*	00000000 __heap_base__
08002518 g       *ABS*	00000000 _etext
08000a30 g     F .text	00000094 chThdCreateI
08000470 g     F .text	0000002c dbg_check_enable
080001e0  w    F .text	00000002 VectorC8
08000930 g     F .text	0000005c chSchWakeupS
08001360 g     F .text	0000005c sdIncomingDataI
08001090 g     F .text	0000004e chOQGetI
080007e0 g     F .text	0000001a _scheduler_init
08000ad0 g     F .text	00000062 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
080001e0  w    F .text	00000002 VectorB4
20000e94 g     O .bss	00000074 SD2
08000800 g     F .text	0000004c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000700 g     F .text	00000018 _vt_init
080014d0 g     F .text	00000034 Vector74
080011c0 g     F .text	00000028 halInit
20000800 g       .bss	00000000 _bss_start
080001e0  w    F .text	00000002 UsageFaultVector
20002000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
080004d0 g     F .text	00000034 dbg_check_unlock
080001e0  w    F .text	00000002 Vector40
08000110 g     F .text	000000c8 ResetHandler
08000f70 g     F .text	00000090 chIQReadTimeout
08001840 g     F .text	00000194 VectorBC
08000230 g     F .text	00000032 _port_init
08001650 g     F .text	000000b6 hal_lld_init
08000b70 g     F .text	00000050 chThdExitS
080011f0 g     F .text	00000008 adcInit
2000090c g     O .bss	00000408 dbg_trace_buffer
080001e0  w    F .text	00000002 PendSVVector
08000720 g     F .text	00000068 chVTSetI
080001e0  w    F .text	00000002 Vector64
200010d0 g       .bss	00000000 _bss_end
20000d18 g     O .bss	00000004 dbg_panic_msg
08000100  w    F .text	00000002 _default_exit
08001e40 g     F .text	00000070 _pal_lld_setgroupmode
080017c0 g     F .text	00000080 adc_lld_init
080001e0  w    F .text	00000002 VectorCC
08001d60 g     F .text	00000048 sd_lld_init
080001e0  w    F .text	00000002 Vector54
080001e0  w    F .text	00000002 Vector98
20000d94 g     O .bss	00000034 ADCD1
08001d40 g     F .text	0000001c VectorD8
080001e0  w    F .text	00000002 Vector24
08000610 g     F .text	00000030 chDbgCheckClassI
08000d10 g     F .text	00000020 chMtxLock
08000990 g     F .text	00000048 chSchDoReschedule
08000390 g     F .text	00000078 chSysInit
08000b40 g     F .text	00000030 chThdSleep
08000e90 g     F .text	0000001a chIQInit
08002450 g     O .text	00000054 _stm32_dma_streams
080015d0 g     F .text	00000034 Vector84
080002e0 g     F .text	00000028 SysTickVector
20000908 g     O .bss	00000004 dbg_isr_cnt
08001710 g     F .text	000000a8 stm32_clock_init
08001db0 g     F .text	00000082 _pal_lld_init
08001300 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
08001190 g     F .text	0000002c _core_init
080001e0  w    F .text	00000002 VectorE4
080019e0 g     F .text	0000016c VectorC0
08000310 g     F .text	00000010 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08000210 g     F .text	00000012 SVCallVector
080000f0  w    F .text	00000002 __late_init
080006e0 g     F .text	00000012 chDbgPanic
20000d1c g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
08000270 g     F .text	00000070 _port_irq_epilogue
08000640 g     F .text	00000030 chDbgCheckClassS
08001f90 g     F .text	00000012 dacSet
080005d0 g     F .text	00000040 dbg_check_leave_isr
08002518 g       *ABS*	00000000 _textdata
080001e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08001ed0 g     F .text	00000076 main
08001450 g     F .text	00000034 Vector6C
20000d2c g     O .bss	00000020 rlist
080001e0  w    F .text	00000002 VectorA0
08001200 g     F .text	0000001e adcObjectInit
08000590 g     F .text	00000040 dbg_check_enter_isr
080000ec g       startup	00000000 __init_array_end
080001e0  w    F .text	00000002 VectorC4
08001550 g     F .text	00000034 Vector7C
08000be0 g     F .text	0000001c chMtxInit
08000370 g     F .text	00000014 _idle_thread
080010e0 g     F .text	000000a4 chOQWriteTimeout
080001e0  w    F .text	00000002 VectorB0
080001e0  w    F .text	00000002 Vector90
20000d14 g     O .bss	00000004 dbg_lock_cnt
20000000 g       *ABS*	00000000 __ram_start__
08000320 g     F .text	00000016 _port_thread_start
080001e0  w    F .text	00000002 Vector60
080001e0  w    F .text	00000002 Vector1C
080001e0  w    F .text	00000002 Vector48
08001b50 g     F .text	00000030 i2c_lld_init
20000400 g       .stacks	00000000 __process_stack_base__
08001490 g     F .text	00000034 Vector70
08001d20 g     F .text	0000001c VectorD4
08000340 g     F .text	00000030 nvicSetSystemHandlerPriority
08001f50 g     F .text	0000003e dacInit
08001230 g     F .text	00000016 i2cObjectInit
20000848 g     O .bss	000000c0 _idle_thread_wa
08001000 g     F .text	00000018 chOQInit
08000f10 g     F .text	00000060 chIQGetTimeout
20000800 g       .bss	00000000 _data
080001e0  w    F .text	00000002 Vector4C
08001590 g     F .text	00000034 Vector80
08000eb0 g     F .text	00000054 chIQPutI
08000200 g     F .text	0000000e _port_switch_from_isr
08001400 g     F .text	00000044 tmInit
080001e0  w    F .text	00000002 Vector68
08000d30 g     F .text	00000088 chMtxUnlock
08000670 g     F .text	00000014 _trace_init
20000400 g       .stacks	00000000 __main_stack_end__
08001510 g     F .text	00000034 Vector78
20002000 g       *ABS*	00000000 __ram_end__
20000800 g       .bss	00000000 _edata
200010d0 g       *ABS*	00000000 _end
08000790 g     F .text	00000048 chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
08001310 g     F .text	0000004a sdObjectInit
080001e0  w    F .text	00000002 Vector88
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000690 g     F .text	00000044 dbg_trace
080000ec g       startup	00000000 __init_array_start
20000e20 g     O .bss	00000074 SD1
080009e0 g     F .text	0000004c _thread_init
080001e0  w    F .text	00000002 Vector50
08001020 g     F .text	00000062 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080001e0  w    F .text	00000002 Vector44
080001e0  w    F .text	00000002 Vector28
08001ec0 g     F .text	00000002 boardInit
080001e0  w    F .text	00000002 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
08000550 g     F .text	00000038 dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
080020b0 g     F .text	00000022 setLeds
08001eb0 g     F .text	00000008 __early_init
080001e0  w    F .text	00000002 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20



# **********************************************************************
#
# Copyright (c) 2003-2008 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

#
# Define OPTIMIZE as yes if you want to build with
# optimization. Otherwise build with debug information.
#
OPTIMIZE		= yes

#
# If Mcpp is not installed in a standard location where the  compiler 
# can find it, set MCPP_HOME to the Mcpp installation directory.
#
MCPP_HOME		?= ../../../../../build/mcpp

#
# Define LP64 as yes or no if you want force a 32 or 64 bit. The
# default is platform-dependent
#
#LP64			?= yes

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

STATICLIBS		= yes
GENPIC                  = no

#
# Common definitions
#
ice_language     = cpp
include $(top_srcdir)/../config/Make.common.rules.icee

#
# Platform specific definitions
#
include	 $(top_srcdir)/config/Make.rules.$(UNAME)

VERSION			= 1.3.0

bindir			= $(top_srcdir)/bin
libdir			= $(top_srcdir)/lib
includedir		= $(top_srcdir)/include

install_bindir		= $(prefix)/bin

MCPP_LIBS              = $(if $(MCPP_HOME),-L$(MCPP_HOME)/$(libsubdir)) -lmcpp
MCPP_RPATH_LINK        = $(if $(MCPP_HOME),$(call rpathlink,$(MCPP_HOME)/$(libsubdir)))

CPPFLAGS		= -I$(includedir)
LDFLAGS			= $(LDPLATFORMFLAGS) $(CXXFLAGS) -L$(libdir) 

ifeq ($(FLEX_NOLINE),yes)
    FLEXFLAGS	       := -L
else
    FLEXFLAGS	       :=
endif

ifeq ($(BISON_NOLINE),yes)
    BISONFLAGS		:= -dvtl
else
    BISONFLAGS		:= -dvt
endif

EVERYTHING		= all depend clean install 

.SUFFIXES:
.SUFFIXES:		.cpp .c .o

.cpp.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $<

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $<


%.h %.cpp: %.y
	rm -f $(*F).h $(*F).cpp
	bison $(BISONFLAGS) $<
	mv $(*F).tab.c $(*F).cpp
	mv $(*F).tab.h $(*F).h
	rm -f $(*F).output

%.cpp: %.l
	flex $(FLEXFLAGS) $<
	rm -f $@
	echo '#include <IceUtil/Config.h>' > $@
	cat lex.yy.c >> $@
	rm -f lex.yy.c

all:: $(SRCS) $(TARGETS)

depend:: $(SRCS)
	-rm -f .depend
	if test -n "$(SRCS)" ; then \
	    $(CXX) -DMAKEDEPEND -M $(CXXFLAGS) $(CPPFLAGS) $(SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi
	if test -n "$(SLICE_SRCS)" ; then \
	    $(SLICE2CPP) --depend $(SLICE2CPPFLAGS) $(SLICE_SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi

clean::
	-rm -f $(TARGETS)
	-rm -f core *.o *.bak


ifneq ($(TEMPLATE_REPOSITORY),)
clean::
	rm -fr $(TEMPLATE_REPOSITORY)
endif

install::
